Dulcardo Arteaga
Stephen Bromfield
Joseph Rivera

Project 0
----------

Downloading and compiling Nachos went fine on our Unix accounts
on nachos.cs.fiu.edu.

Result of running threads demo:
========================================================================
jrive034@nachos:~/nachosdir/nachos-3.4/code/threads 127% ./nachos
*** thread 0 looped 0 times
*** thread 1 looped 0 times
*** thread 0 looped 1 times
*** thread 1 looped 1 times
*** thread 0 looped 2 times
*** thread 1 looped 2 times
*** thread 0 looped 3 times
*** thread 1 looped 3 times
*** thread 0 looped 4 times
*** thread 1 looped 4 times
No threads ready or runnable, and no pending interrupts.
Assuming the program completed.
Machine halting!

Ticks: total 130, idle 0, system 130, user 0
Disk I/O: reads 0, writes 0
Console I/O: reads 0, writes 0
Paging: faults 0
Network I/O: packets received 0, sent 0

Cleaning up...
=========================================================================

This matches the expected output.

Running ./nachos ../test/halt with the -x and -s options also
seems to run fine.


Thread class:

This class represents a single nachos thread and contains
the necessary data structures, including program registers, program counter, execution stack, and thread state.
It also has simple implementations of several important functions. Fork() allows a thread to run
a function given to it. Yield() gives up the CPU if another thread is runnable.
Sleep() gives up the CPU as well, but blocks the thread (meaning it must be put back on the
ready queue at some other time in order to run again). There are also methods to handle context
switches (saving and restoring registers).
